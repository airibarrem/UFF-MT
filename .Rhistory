cat(c('SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(paste(paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n \n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', 'SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste(paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n \n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', 'SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
roads = rcompose('./in/sp/roads_mt_wgs.tif',bgd)
unique(values(roads))
plot(roads==1)
plot(roads==2)
plot(roads==3)
plot(roads==6)
plot(roads==3)
roads = rcompose('./in/sp/roads_mt_wgs.tif',bgd)
roads[roads == 6] = 4
unique(values(roads))
writeRaster(slope, filename='./in/sp/roads-MT.tif')
writeRaster(slope, filename='./in/sp/roads-MT.tif',overwrite=T)
writeRaster(roads, filename='./in/sp/roads-MT.tif',overwrite=T)
slope
plot(roads==1)
plot(roads==2)
plot(roads==3)
plot(roads==4)
plot(roads==1)
silos = rcompose('./in/sp/distance_silos_soja.tif',bgd)
plot(silos)
spplot(stack(silos,silos==0))
coordinates(silos==0)
silos = silos==0
silos[silos==0]=NA
plot(silos)
spplot(silos)
unique(values(silos))
coordinates(silos)
coordinates(silos==T)
coordinates(silos==T)[which(silos==T)]
coordinates(silos==T)[which(silos==T)]
which(silos==T)
silos==T
silos = rcompose('./in/sp/distance_silos_soja.tif',bgd)
silos = (silos==0)
which(silos==T)
which(silos==1)
which(T %in% silos)
T %in% silos
values(silos)
silos[silos]
coordinates(silos)[silos]
coordinates(silos)
coordinates(silos)[silos,]
which (silos == silos)
which (silos == T)
which (silos)
which (values(silos))
coordinates(silos)[which(values(silos)),]
teste = SpatialPoints(coordinates(silos)[which(values(silos)),])
plot(teste)
silos = rcompose('./in/sp/distance_silos_soja.tif',bgd)
spplot(silos,teste)
spplot(stack(silos,teste))
spplot(silos)
spplot(teste)
spplot(silos)
spplot(teste)
plot(silos)
?plot
plot(teste,add=T)
silos = raster('./in/sp/distance_silos_soja.tif',bgd)
silos = raster('./in/sp/distance_silos_soja.tif')
silos = (silos==0)
teste = SpatialPoints(coordinates(silos)[which(values(silos)),])
plot(silos)
silos = raster('./in/sp/distance_silos_soja.tif')
plot(silos)
plot(teste,add=T)
?SpatialPoints
?shapefile
shapefile(silos, filename='./in/sp/silos-MT.shp')
silos = raster('./in/sp/distance_silos_soja.tif')
silos = (silos==0)
silos = SpatialPoints(coordinates(silos)[which(values(silos)),])
shapefile(silos, filename='./in/sp/silos-MT.shp')
plot(silos)
sh = raster('./in/sp/distance_slaughterhouses.tif')
sh = (sh==0)
teste = SpatialPoints(coordinates(sh)[which(values(sh)),])
sh = raster('./in/sp/distance_slaughterhouses.tif')
plot(sh)
plot(teste,add=T)
sh = raster('./in/sp/distance_slaughterhouses.tif')
sh = (sh==0)
sh = SpatialPoints(coordinates(sh)[which(values(sh)),])
shapefile(sh, filename='./in/sp/sh-MT.shp')
sp.files = grep('tif$',dir('./in/sp/'),value=T)
sp.files
if (!('silos-MT.shp' %in% dir('./in/sp/'))){
silos = raster('./in/sp/distance_silos_soja.tif')
silos = (silos==0)
silos = SpatialPoints(coordinates(silos)[which(values(silos)),])
shapefile(silos, filename='./in/sp/silos-MT.shp')
}
!('silos-MT.shp' %in% dir('./in/sp/'))
!('sh-MT.shp' %in% dir('./in/sp/'))
if (!('sh-MT.shp' %in% dir('./in/sp/'))){
sh = raster('./in/sp/distance_slaughterhouses.tif')
sh = (sh==0)
sh = SpatialPoints(coordinates(sh)[which(values(sh)),])
shapefile(sh, filename='./in/sp/sh-MT.shp')
}
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(paste(paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n \n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', 'SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', 'road_main', 'road_trail', 'road_trail', 'road_acc', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', 'SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', 'road_main', 'road_trail', 'road_trail', 'road_acc', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', 'SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', 'road_main', 'road_trail', 'road_trail', 'road_acc', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', rep(1,length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', 'SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', 'road_main', 'road_trail', 'road_trail', 'road_acc', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
MT.data = harmonize.data(cfg.name='cfg.txt', cfg.dir='./in/', in.df=NULL,
sf.on=T, cores=3, quiet=F)
cfg.name='cfg.txt'
cfg.dir='./in/'
in.df = read.csv(paste0(cfg.dir,cfg.name), sep='|', header=F, as.is=T)}
in.df = read.csv(paste0(cfg.dir,cfg.name), sep='|', header=F, as.is=T)
cfg.df = data.frame('s_chains'=read.key('SC.NAMES',in.df))
cfg.df$price = read.key('PRICE.VALS',in.df,NUMERIC=T)
cfg.df$cost = read.key('COST.VALS',in.df,NUMERIC=T)
cfg.df$yield = read.key('YIELD.VALS',in.df,NUMERIC=T)
cfg.df$prod = read.key('PROD.VALS',in.df,NUMERIC=T)
cfg.df$incr = read.key('INCR.VALS',in.df,NUMERIC=T)
cfg.df$profit = (cfg.df$price - cfg.df$cost) * cfg.df$yield
cfg.df
View(in.df)
keyword='PRICE.VALS'
grep(keyword, in.df[[1]], fixed=T, value=T)
gsub('"','',
grep(keyword, in.df[[1]], fixed=T, value=T) )
unlist(strsplit(sub(keyword,'',gsub(' ', '', gsub('\t','',
gsub("'",'', gsub('"','',
grep(keyword, in.df[[1]], fixed=T, value=T) ))))),
','))
strsplit(sub(keyword,'',gsub(' ', '', gsub('\t','',
gsub("'",'', gsub('"','',
grep(keyword, in.df[[1]], fixed=T, value=T) ))))),
',')
sub(keyword,'',gsub(' ', '', gsub('\t','',
gsub("'",'', gsub('"','',
grep(keyword, in.df[[1]], fixed=T, value=T) ))))),
',')
sub(keyword,'',gsub(' ', '', gsub('\t','',
gsub("'",'', gsub('"','',
grep(keyword, in.df[[1]], fixed=T, value=T) )))))
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', rep('1 ,', length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', rep('1 ,', length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', rep('1 ,', length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', rep('1 ,', length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', rep('1 ,', length(lu.names)),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', 'SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', 'road_main', 'road_trail', 'road_trail', 'road_acc', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
?paste
paste(rep(1,10),sep=', ')
cat(paste(rep(1,10),sep=', '))
cat(paste(rep(1,10),sep=','))
paste(rep(1,10),sep=',')
paste(rep(1,10), sep=',')
paste(rep(1,10), sep='.')
cat(paste(rep(1,10), sep='.'))
cat(paste(rep(1,10), collapse='.'))
cat(paste(rep(1,10), collapse=', '))
paste(rep(1,10), collapse=', ')
cat(c('YIELD.VALS', paste(rep(1,length(lu.names)),collapse=','),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',lu.names,'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', paste('SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL',collapse=', '), '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', 'road_main', 'road_trail', 'road_trail', 'road_acc', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',paste(lu.names,collapse=', '),'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', paste('SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL',collapse=', '), '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', 'crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', 'road_main', 'road_trail', 'road_trail', 'road_acc', '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
paste('SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL',collapse=', ')
paste(c('SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL'),collapse=', ')
# config file setup: Supply chains
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',paste(lu.names,collapse=', '),'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', paste(c('SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'SINGL', 'UNCL'),collapse=', '), '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', paste(c('crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'crop', 'other'),collapse=', '), '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', paste(c('road_main', 'road_trail', 'road_trail', 'road_acc'),collapse=', '), '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
in.df = read.csv(paste0(cfg.dir,cfg.name), sep='|', header=F, as.is=T)}
in.df = read.csv(paste0(cfg.dir,cfg.name), sep='|', header=F, as.is=T)
cfg.df = data.frame('s_chains'=read.key('SC.NAMES',in.df))
cfg.df$price = read.key('PRICE.VALS',in.df,NUMERIC=T)
cfg.df$cost = read.key('COST.VALS',in.df,NUMERIC=T)
cfg.df$yield = read.key('YIELD.VALS',in.df,NUMERIC=T)
cfg.df$prod = read.key('PROD.VALS',in.df,NUMERIC=T)
cfg.df$incr = read.key('INCR.VALS',in.df,NUMERIC=T)
cfg.df$profit = (cfg.df$price - cfg.df$cost) * cfg.df$yield
cfg.df
sp.dir = read.key('SP.DIR',in.df)
sp.dir
LU.file = read.key('LU.FILE',in.df)
LU.file
LU.NOW = raster(paste0(sp.dir,LU.file))
if (is.na(crs(LU.NOW))){stop('Loaded land-use map does not possess CRS information.')}
LU.cls = read.key('LU.CLASSES',in.df)
LU.msk = read.key('LU.MASKS',in.df)
LU.NOW = lapply(LU.cls,function(x){LU.NOW == which(LU.cls %in% x)})
names(LU.NOW) = LU.cls
LU.NOW
LU.2006 = rcompose('./in/sp/GY2006.tif',bgd)
LU.2006[LU.2006 == -2] = 2 # Forest
LU.2006[LU.2006 == -1] = 3 # Pasture
LU.2006[LU.2006 == 11] = 4 # Irrigated
LU.2006[LU.2006 == 99] = 7 # Unclassified
writeRaster(LU.2006, filename='./in/sp/LU2006.tif')
writeRaster(LU.2006, filename='./in/sp/LU2006.tif',overwrite=T)
cat(c('\n', 'SUPPLY CHAINS', '************************************************************************', '\n \n'), file='./in/cfg.txt')
cat(c('SC.NAMES',paste(lu.names,collapse=', '),'\n \n'),file='./in/cfg.txt',append=T)
cat(c('YIELD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PRICE.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('COST.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('PROD.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
cat(c('INCR.VALS', paste(rep(1,length(lu.names)),collapse=', '),'\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Spatial priors
cat(c('\n \n', 'SPATIAL PRIORS', '***********************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('SP.DIR', './in/sp/', '\n \n'), file='./in/cfg.txt',append=T)
cat(paste('\n', paste0(lu.names,'.WEIGHTS'), paste0(lu.names,'_wgt.txt'), '\n'), file='./in/cfg.txt', append=T)
# config file setup: Land-use / land-cover map
cat(c('\n \n \n', 'LAND-USE / LAND-COVER MAP', '*************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.FILE', 'LU2006.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.CLASSES', paste(c('SOYA', 'NOSYS', 'CATTL', 'SINGL', 'SOCOT', 'SOMAI', 'UNCL'),collapse=', '), '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LU.MASKS', 'UNCL', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.CLASSES', paste(c('crop', 'for_close', 'grass', 'crop', 'crop', 'crop', 'other'),collapse=', '), '\n \n'), file='./in/cfg.txt',append=T)
cat(c('LC.SLOPE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
# config file setup: Travel-cost analysis
cat(c('\n \n', 'TRAVEL COST ANALYSIS', '******************************************************************', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.FILE', 'slope-MT.tif', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('ROADS.CLASSES', paste(c('road_main', 'road_trail', 'road_trail', 'road_acc'),collapse=', '), '\n \n \n'), file='./in/cfg.txt',append=T)
cat(c('Silos.PU', 'silos-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
cat(c('Slaughterhouses.PU', 'sh-MT.shp', '\n \n'), file='./in/cfg.txt',append=T)
LU.NOW = raster(paste0(sp.dir,LU.file))
LU.NOW = lapply(LU.cls,function(x){LU.NOW == which(LU.cls %in% x)})
in.df = read.csv(paste0(cfg.dir,cfg.name), sep='|', header=F, as.is=T)
cfg.df = data.frame('s_chains'=read.key('SC.NAMES',in.df))
cfg.df$price = read.key('PRICE.VALS',in.df,NUMERIC=T)
cfg.df$cost = read.key('COST.VALS',in.df,NUMERIC=T)
cfg.df$yield = read.key('YIELD.VALS',in.df,NUMERIC=T)
cfg.df$prod = read.key('PROD.VALS',in.df,NUMERIC=T)
cfg.df$incr = read.key('INCR.VALS',in.df,NUMERIC=T)
cfg.df$profit = (cfg.df$price - cfg.df$cost) * cfg.df$yield
cfg.df
sp.dir = read.key('SP.DIR',in.df)
LU.file = read.key('LU.FILE',in.df)
LU.NOW = raster(paste0(sp.dir,LU.file))
LU.cls = read.key('LU.CLASSES',in.df)
LU.msk = read.key('LU.MASKS',in.df)
LU.NOW = lapply(LU.cls,function(x){LU.NOW == which(LU.cls %in% x)})
names(LU.NOW) = LU.cls
LU.NOW
LU.NOW$All = Reduce('+', LU.NOW)/Reduce('+', LU.NOW)
bgd = LU.NOW$All
bgd = bgd/bgd
bgd[bgd>0]=0
sp.files = dir(sp.dir)
grep(c('.tif$','.shp$'),sp.files,value=T)
?grep
c(grep('.tif$',sp.files,value=T),grep('.shp$',sp.files,value=T))
sp.files = dir(sp.dir)
sp.files = c(grep('.tif$',sp.files,value=T), grep('.shp$',sp.files,value=T))
sp.files = dir(sp.dir)
sp.files = c(grep('.tif$',sp.files,value=T), grep('.shp$',sp.files,value=T))
sp.files
sp.files = grep('.tif$',sp.files,value=T)
sp.files
sp.files = grep('.tif$', dir(sp.dir), value=T)
sp.files
sp.list = sfLapply(paste0(sp.dir,sp.files),rcompose,bgd)
sfStop()
sfInit(parallel=F)
sp.list = sfLapply(paste0(sp.dir,sp.files),rcompose,bgd)
names(sp.list) = sp.files
sp.list
sp.files = grep('.tif$', dir(sp.dir), value=T)
sp.files
sp.list = sfLapply(paste0(sp.dir,sp.files),rcompose,bgd)
names(sp.list) = sp.files
sp.list
sp.list = c(sp.list,bgd)
names(sp.list)[length(sp.list)] = 'Background_mask'
sp.list
LU.NOW
source(paste0(master.dir,'sp_fun.R'))
master.dir = '/media/alvaro/Windows/Users/Alvaro/Documents/IIS_PROJECTS/SpAM/'
source(paste0(master.dir,'sp_fun.R'))
source(paste0(master.dir,'harmonize_data.R'))
source(paste0(master.dir,'LU_gen.R')
source(paste0(master.dir,'LU_gen.R'))
rm(list=ls())
source(paste0(master.dir,'LU_gen.R'))
master.dir = '/media/alvaro/Windows/Users/Alvaro/Documents/IIS_PROJECTS/SpAM/'
source(paste0(master.dir,'LU_gen.R'))
